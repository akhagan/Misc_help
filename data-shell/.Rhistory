1==1
1==2
1<=1
1>0
x<<-1/40
log(x)
x<-100
mass<-47.2
age <- 122
mass <- mass*2.3
age <-age-20
mass>age
rm(age, mass)
install.packages(ggplot2,plyr, gapminder)
install.packages("ggplot2", plyr, gapminder)
installed.packages()
install.packages("ggplot2")
install.packages(plyr)
install.packages("plyr")
install.packages("gapminder")
install.packages("rmarkdown")
library(tidyverse)
View(nycflights13::flights)
flights <- nycflights13::flights
transmute(flights, dep_time,
hour= dep_time %/% 100,
minute = dep_time %% 100)
transmute(flights, dep_time,
hour= dep_time %/% 100,
minute = dep_time %% 100,
dep_time_min = (hour*60)+minute)
calc.airtime ->
transmute(flights, arr_time - dep_time)
calc.airtime <-
transmute(flights, arr_time - dep_time)
air_time == calc.airtime
flights$air_time == calc.airtime
flights%>%
aggregate(dep_delay, carrier, FUN=mean)
flights%>%
aggregate(data=flights, dep_delay, carrier, FUN=mean)
aggregate(flights$dep_delay, flights$carrier, FUN=mean)
??aggregate
aggregate(data=flights, by = carrier, FUN=mean(dep_delay))
aggregate(x=flights$dep_delay, by = list(flights$carrier), FUN=function(x) mean(x, na.rm=T))
flights %>$
select (dep_delay, carrier) %>%
filter(!is.na(dep_delay)) %>%
group_by (carrier) %>%
summarise (mean_dep = mean(dep_delay),
sd_dep= sd(dep_delay))
flights %>%
select (dep_delay, carrier) %>%
filter(!is.na(dep_delay)) %>%
group_by (carrier) %>%
summarise (mean_dep = mean(dep_delay),
sd_dep= sd(dep_delay))
flights$mean_dep <- aggregate(x=flights$dep_delay, by = list(flights$carrier), FUN=function(x) mean(x, na.rm=T))
mean_dep <- aggregate(x=flights$dep_delay, by = list(flights$carrier), FUN=function(x) mean(x, na.rm=T))
source('~/.active-rstudio-document')
view(diamonds)
View(diamonds)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = x), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = z), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = z), binwidth = 0.1)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = z), binwidth = 0.1)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.1)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 0.1)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 1)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 0.01)+
ylim(5000)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 0.01)+
xlim(5000)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 0.01)+
coord_cartesian(xlim = c(0, 5000))
ggplot(data = smaller, mapping = aes(x = carat, colour = cut)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = carat, colour = cut)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = carat, colour = cut)) +
geom_histogram(binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01)
ggplot(data = diamonds, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01)+
coord_cartesian(xlim = c(0, 1))
library(tidyverse)
ggplot(data = diamonds, mapping = aes(x = price, y = ..density..)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 500)
nycflights13::flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
) %>%
ggplot(mapping = aes(x=sched_dep_time, y=..density..)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
library(tidyverse)
table2
population <- filter(table2, type=="population")
population
population %>%
select("country", "year", "count") %>%
rename(population=count)
cases <- filter(table2, type=="cases")
cases %>%
select("country", "year", "count") %>%
rename(cases=count)
cases <- filter(table2, type=="cases")
cases %>%
select("count") %>%
rename(cases=count)
bind_cols(population, cases)
population <- filter(table2, type=="population")
population %>%
select("country", "year", "count") %>%
rename(population=count)
cases <- filter(table2, type=="cases")
cases %>%
select("count") %>%
rename(cases=count)
bind_cols(population, cases)
population <- filter(table2, type=="population")%>%
select("country", "year", "count") %>%
rename(population=count)
cases <- filter(table2, type=="cases") %>%
select("count") %>%
rename(cases=count)
bind_cols(population, cases)
bind_cols(population, cases) %>%
mutate(rate=cases/population*10000)
table4a
rate <- table4a[,2:3]/table4b[,2:3]
rate
rate <- table4a[,2:3]/table4b[,2:3] %>%
rate$country <- c("Afganaistan", "brazil", "China")
rate$country <- c("Afganaistan", "brazil", "China")
rate
rate <- (table4a[,2:3]/table4b[,2:3])*10000
rate$country <- c("Afganaistan", "brazil", "China")
rate
table4a
preg <- tribble(
~pregnant, ~male, ~female,
"yes",     NA,    10,
"no",      20,    12
)
preg %>%
gather(male, female, key="gender", value="count")
install.packages("rmarkdown")
install.packages("ggplot2")
pwd
pwd()
?working directory
?setwd
getwd()
setwd("C:/Users/adaha/Desktop/data-shell")
gapminder <- read.csv(file="gapminder-FiveYearData.csv")
gapminder[1:20]
gapminder[1:20,]
gapminder_small <- data.frame(gapminder[c(1:9, 19:23),])
head(gapminder_small)
library(ggplot2)
ggplot(data = gapminder, aes(x=gdpPercap, y=lifeExp)) +
geom_point()
head(starts.with)
starts.with <- sustr(gapminder$country, start=1, stop=1)
starts.with <- substr(gapminder$country, start=1, stop=1)
head(starts.with)
length(starts.with)
az.countries <- gapminder[starts.with %in% c("A", "Z")]
az.countries <- gapminder[starts.with %in% c("A", "Z"),]
View(az.countries)
? substr
ggplot(data = gapminder, aes(x=gdpPercap, y=lifeExp)) +
geom_point() +
geom_smooth(method = "lm")
ggplot(data = az.countries, aes(x=year, y=lifeExp, color=continent)) +
geom_line() + facet_wrap(~country)
