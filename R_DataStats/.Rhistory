1==1
1==2
1<=1
1>0
x<<-1/40
log(x)
x<-100
mass<-47.2
age <- 122
mass <- mass*2.3
age <-age-20
mass>age
rm(age, mass)
install.packages(ggplot2,plyr, gapminder)
install.packages("ggplot2", plyr, gapminder)
installed.packages()
install.packages("ggplot2")
install.packages(plyr)
install.packages("plyr")
install.packages("gapminder")
install.packages("rmarkdown")
library(tidyverse)
View(nycflights13::flights)
flights <- nycflights13::flights
transmute(flights, dep_time,
hour= dep_time %/% 100,
minute = dep_time %% 100)
transmute(flights, dep_time,
hour= dep_time %/% 100,
minute = dep_time %% 100,
dep_time_min = (hour*60)+minute)
calc.airtime ->
transmute(flights, arr_time - dep_time)
calc.airtime <-
transmute(flights, arr_time - dep_time)
air_time == calc.airtime
flights$air_time == calc.airtime
flights%>%
aggregate(dep_delay, carrier, FUN=mean)
flights%>%
aggregate(data=flights, dep_delay, carrier, FUN=mean)
aggregate(flights$dep_delay, flights$carrier, FUN=mean)
??aggregate
aggregate(data=flights, by = carrier, FUN=mean(dep_delay))
aggregate(x=flights$dep_delay, by = list(flights$carrier), FUN=function(x) mean(x, na.rm=T))
flights %>$
select (dep_delay, carrier) %>%
filter(!is.na(dep_delay)) %>%
group_by (carrier) %>%
summarise (mean_dep = mean(dep_delay),
sd_dep= sd(dep_delay))
flights %>%
select (dep_delay, carrier) %>%
filter(!is.na(dep_delay)) %>%
group_by (carrier) %>%
summarise (mean_dep = mean(dep_delay),
sd_dep= sd(dep_delay))
flights$mean_dep <- aggregate(x=flights$dep_delay, by = list(flights$carrier), FUN=function(x) mean(x, na.rm=T))
mean_dep <- aggregate(x=flights$dep_delay, by = list(flights$carrier), FUN=function(x) mean(x, na.rm=T))
source('~/.active-rstudio-document')
view(diamonds)
View(diamonds)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = x), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = z), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = z), binwidth = 0.1)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = z), binwidth = 0.1)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.1)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 0.1)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 1)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 0.01)+
ylim(5000)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 0.01)+
xlim(5000)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 0.01)+
coord_cartesian(xlim = c(0, 5000))
ggplot(data = smaller, mapping = aes(x = carat, colour = cut)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = carat, colour = cut)) +
geom_freqpoly(binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = carat, colour = cut)) +
geom_histogram(binwidth = 0.1)
ggplot(data = diamonds, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01)
ggplot(data = diamonds, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01)+
coord_cartesian(xlim = c(0, 1))
library(tidyverse)
ggplot(data = diamonds, mapping = aes(x = price, y = ..density..)) +
geom_freqpoly(mapping = aes(colour = cut), binwidth = 500)
nycflights13::flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
) %>%
ggplot(mapping = aes(x=sched_dep_time, y=..density..)) +
geom_freqpoly(mapping = aes(colour = cancelled), binwidth = 1/4)
library(tidyverse)
table2
population <- filter(table2, type=="population")
population
population %>%
select("country", "year", "count") %>%
rename(population=count)
cases <- filter(table2, type=="cases")
cases %>%
select("country", "year", "count") %>%
rename(cases=count)
cases <- filter(table2, type=="cases")
cases %>%
select("count") %>%
rename(cases=count)
bind_cols(population, cases)
population <- filter(table2, type=="population")
population %>%
select("country", "year", "count") %>%
rename(population=count)
cases <- filter(table2, type=="cases")
cases %>%
select("count") %>%
rename(cases=count)
bind_cols(population, cases)
population <- filter(table2, type=="population")%>%
select("country", "year", "count") %>%
rename(population=count)
cases <- filter(table2, type=="cases") %>%
select("count") %>%
rename(cases=count)
bind_cols(population, cases)
bind_cols(population, cases) %>%
mutate(rate=cases/population*10000)
table4a
rate <- table4a[,2:3]/table4b[,2:3]
rate
rate <- table4a[,2:3]/table4b[,2:3] %>%
rate$country <- c("Afganaistan", "brazil", "China")
rate$country <- c("Afganaistan", "brazil", "China")
rate
rate <- (table4a[,2:3]/table4b[,2:3])*10000
rate$country <- c("Afganaistan", "brazil", "China")
rate
table4a
preg <- tribble(
~pregnant, ~male, ~female,
"yes",     NA,    10,
"no",      20,    12
)
preg %>%
gather(male, female, key="gender", value="count")
setwd("C:/Users/adaha/OneDrive/Documents/GitHub/R_DataStats")
ggplot(rincome_summary, aes(age, fct_relevel(rincome, "Not applicable"))) +
geom_point()
library(tidyverse)
library(forcats)
ggplot(rincome_summary, aes(age, fct_relevel(rincome, "Not applicable"))) +
geom_point()
ggplot(gss_cat) +
geom_bar(aes(x = relig, fill = denom))
by_year <- gss_cat %>%
filter(!is.na(partyid)) %>%
group_by(year) %>%
count()
View(by_year)
by_partyid <- gss_cat %>%
filter(!is.na(partyid)) %>%
group_by(year, partyid) %>%
mutate(partyidcoll = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
))
View(by_partyid)
by_partyid <- gss_cat %>%
filter(!is.na(partyid)) %>%
select(year, partyid) %>%
mutate(partyidcoll = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year)%>%
count(partyid)%>%
rename(partyid_total)
by_partyid <- gss_cat %>%
filter(!is.na(partyid)) %>%
select(year, partyid) %>%
mutate(partyidcoll = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year)%>%
count(partyid)%>%
rename(partyid_total)
by_partyid <- gss_cat %>%
filter(!is.na(partyid)) %>%
select(year, partyid) %>%
mutate(partyidcoll = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year)%>%
count(partyid)
View(by_partyid)
by_partyid <- gss_cat %>%
filter(!is.na(partyid)) %>%
select(year, partyid) %>%
mutate(partyidcoll = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year)%>%
count(partyidcoll)
View(by_partyid)
by_year <- gss_cat %>%
filter(!is.na(year)) %>%
group_by(year, partyid) %>%
count() %>%
group_by(year) %>%  ###
mutate(prop = n / sum(n))
ggplot(by_year, aes(year, prop, colour = partyid)) +
geom_line(na.rm = TRUE)
ggplot(by_year, aes(year, prop, colour = fct_reorder2(partyid, year, prop))) +
geom_line() +
labs(colour = "partyid")
by_partyid <- gss_cat %>%
filter(!is.na(partyid)) %>%
select(year, partyid) %>%
mutate(partyidcoll = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year)%>%
count()%>%
rename(partyid_yr = n)
partyid_year_count <- gss_cat %>%
filter(!is.na(partyid)) %>%
select(year, partyid) %>%
mutate(partyid = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year) %>%
count() %>%
rename(partyid_year_total = n)
by_year <- gss_cat %>%
filter(!is.na(partyid)) %>%
mutate(partyid = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
rep = c("Strong republican", "Not str republican"),
ind = c("Ind,near rep", "Independent", "Ind,near dem"),
dem = c("Not str democrat", "Strong democrat")
)) %>%
group_by(year, partyid) %>%
count() %>%
left_join(partyid_year_count, by = "year") %>%
mutate(prop = n / partyid_year_total)
by_year %>%
filter(partyid != "other") %>%
ggplot(aes(year, prop, color = partyid)) +
geom_line(na.rm = T)
gss_cat %>%
count(relig, denom)
ggplot(gss_cat) +
geom_bar(aes(x = relig, fill = denom))
by_year <- gss_cat %>%
filter(!is.na(year)) %>%
mutate(partyid = fct_collapse(partyid,
other = c("No answer", "Don't know", "Other party"),
Republican = c("Strong republican", "Not str republican"),
Independent = c("Ind,near rep", "Independent", "Ind,near dem"),
Democrat = c("Not str democrat", "Strong democrat"))) %>%
group_by(year, partyid) %>%
count() %>%
group_by(year) %>%  ###
mutate(prop = n / sum(n)) %>%
filter(partyid != "other")
ggplot(by_year, aes(year, prop, colour = partyid)) +
geom_line(na.rm = TRUE)
